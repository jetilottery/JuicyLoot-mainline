define({	/*	 * Game configuration options	 * Anything defined here could be overwritten either based on the channel in	 * assetPacks/CHANNEL/layout/gameConfig.js or at an operator level by gameConfig.json in i18n	 */	/*	 * GAME 0 GAMEPLAY / RULES	 */	MOVE_LIMIT: 25,				//Total swaps to start the game with	MOVE_LIMIT_WARNING: 3,		//When to start wobbling the moves meter	//Points scored for each icon pop type. All scores are multiplied by the "score multiplier", which starts with a value of 1.	POP_POINTS: 100,			//default - multiplied by the _popX and/or _popY value of the tile	GLASS_POINTS: 500,	JUG_POINTS: 1000,	CHERRY_POINTS: 500,	BIG_POINTS: 2500,	COMBO_MULTIPLIER: 1.3, 		//Score multiplier is multiplied by this amount every combo (i.e. every time all drops complete after a pop, but there are new tiles to pop)	//Game objectives	OBJECTIVES: [8,  25, 40],	//Amount of popped icons needed for each objective	OBJECTIVES_TOTAL: 18,		//Total objectives (6 fruits with 3 objectives each)	//Score thresholds for star ratings	HISCORE_1STAR: 20000,	HISCORE_2STAR: 40000,	HISCORE_3STAR: 80000,	COUNT_TIME: 0.000025,		//Score counter rate (seconds per point)	RESULTS_BURST_ANIM_TIME: 0.83333333,	//Star burst animation time (Midgame results)	RESULTS_SHINE_ANIM_TIME: 0.83333333,	//Star shine animation time (Midgame results)	//Score thresholds for message popups	BIG_SCORE_LOW: 3000,			// "JUICY"	BIG_SCORE_MEDIUM: 4500,			// "DELICIOUS!"	BIG_SCORE_HIGH: 6000,			// "SLURP-TASTIC!!"	BIG_SCORE_DISPLAY_SECONDS: 0.6,	// Time to display the popup for	//Mesh settings for big score popups. Higher numbers = smoother distortion but worse performance	MESH_TEXT_COLUMNS: 20,	MESH_TEXT_ROWS: 5,	MESH_WIDTH_MAX: 1350,		//Max allowed width for the popup. If a message is wider than this it will be downscaled	LOW_SWAPS: 3,				//swapAlarm becomes true if swaps goes below this value	HIGH_SWAPS: 4,				//swapAlarm becomes false if swaps goes above this value	POPUP_FADE_TIME: 0.3,		//Time to fade in a popup	POPUP_WAIT_TIME: 0.6,		//Delay before fading in popup	//Tween timings for tile reveal at game0 start	SHOW_BG_TIME_SINGLE: 0.5,		//Time to show one tile	SHOW_BG_TIME_ALL: 5,			//Time to show all tiles	SHOW_ICON_TIME_SINGLE: 0.5,		//Time to show icon (after tile appears)	SHOW_ICON_TIME_ALL: 2,			//Time to show all icons	//Animation ratios. Basically how fast certain sequences should resolve, expressed as a ratio of the frame rate (approx. 60fps)	ANIM_SPEED_ICON: 0.4,	ANIM_SPEED_POP: 0.6,	//These are just to stop the game getting in a race condition when it tries to rearrange the starting tile fill.	MAX_UNPOP_TRIES: 10,	MAX_UNPOP_PASSES: 10,	//Audio times	AUDIO_DEFAULTFADE: 1,		//Generic fade time for all music	AUDIO_CROSSFADE: 3,			//Generic crossfade time for all music	//Parallax background	PARALLAX: [0.1, 0.5, 1],	//Scroll ratios for the parallax layers, in drawing order (also furthest-nearest)	TRUCK_ACCELERATION: 195, 	//pixels per second per second	TRUCK_SPEED: 500,			//pixels per second	//Fruit animation settings	FRUIT_ANIMATE_GAP_MAX: 0.5,	//Max gap in seconds between each fruit animation on results	LINE_CLEAR_TIME: 1, 		//Total time in seconds for the "beam" sprite tween during line clear (stripey fruit explosion)	//"Floatie" configs. Floaties are the particles that fly to the objectives meters when you pop a fruit.	FLOAT_TIME: 0.6,			//Time floaties take to fly to the meters	FLOAT_FADE_MAX: 80,			//When to start fading the floaties as they approach the meters;	FLOAT_FADE_MIN: 60,			//When to finish fading the floaties as they approach the meters;	FLOAT_WAIT: 0.1,			//Time floaties wait at their spawn point before flying over	FLOAT_CURVE_MIN: 200,		//Floaties follow an "s" shaped curve to their objective meter. This is the min "width" of the 'S' in px	FLOAT_CURVE_MAX: 300,		//Max "width" of the 'S' in px	FLOAT_UP: "-=5",			//Floatie hover amount (px) - i.e. how much the floatie moves when not flying to the objective	FLOAT_DOWN: "+=5",		BLENDER_FILL_TIME: 3.5,			//Time the blender animation takes to complete (s)	OBJECTIVES_FLASH_TIME: 0.5,		//Length of flash tween on game meter (objectives, moves, score) text when the value updates.	OBJECTIVES_FLASH_SCALE: 1.1,	//Amount to scale up the meter value during flash tween	IDLE_HINT_INTERVAL: 5,			//Time before hint is shown	IDLE_HINT_DURATION: 3,			//Duration of the hint animation sequence	IDLE_HINT_CANCEL: 0.1,			//Time taken to hide the hint animation	//Sparkle animations occur constantly during game0.	SPARKLE_INTERVAL: 3, 				// Time between sparkle animations	SPARKLE_INTERVAL_VARIATION: 0.25,	// Actual sparkle times will be random, +/- this value	/**	 * USER CONTROL TWEAKS	 */	SQUISH_MIN: 0.5,			//How much the icon squishes on swap / min amount of squish on drop.	SQUISH_MAX: 0.3,			//Maximum amount the icon will squish if it falls the whole height of the board	SQUISH_TIME: 0.1,			//Time taken by the squish animation. MUST BE <= DROP_TIME and SWAP_TIME	SWAP_TIME: 0.3,				//Swap animation length	DROP_TIME: 0.1,				//Drop animation length (per tile)	SPARKLE_TIME: 1,			//Idle animation length	AUTO_SWAP_DELAY: 0.5,		//Time to show auto-swap before doing it	SWIPE_DEAD_ZONE: 30,		//How much the player has to swipe before a swap is registered (px)		/*	 * STANDARDIW CONFIG	 */	// Should the HowToPlay screen show when the game loads	showIGTLogoOnLoading: false, //If you want to show the logo, set to true.	showHowToPlayOnLoad: true,	toggleAltAutoPlay: true, 	//Game0	toggleAutoPlay: false,		//Game1	fullGameAutoPlay: false, 	//Set true to apply autoPlay to both games. Uses game1 toggle setting (toggleAutoPlay)	// Time between each number being revealed in autoplay. 0 for instant reaveal.	autoPlayWinningNumberInterval: 0.5,	autoPlayPlayerNumberInterval: 0.5,	// Time between the revealing the winning numbers section and the player numbers section	autoPlayPlayerNumberDelay: 1,	// Time to wait on midGame result when fullGameAutoplay is enabled.	fullGameAutoPlayMidGameInterval: 5,	// Time over which the music will fade out on entering the result screen	resultMusicFadeOutDuration: 0,	// Time between entering the result screen and the terminator audio starting	resultTerminatorFadeInDelay: 0,	// Time over which the terminator audio will fade in	resultTerminatorFadeInDuration: 0.25,	// Whether or not to show the result screen at game end	showResultScreen: true,	// Whether or not to save data to jLottery/RGS	revealDataSaveEnabled: true,	// Set true to switch off using localstorage for highscores	disableLocalStorage: false,	// Keep console buttons enabled during WLA wager, false by default	consoleEnabledDuringPlay: false});