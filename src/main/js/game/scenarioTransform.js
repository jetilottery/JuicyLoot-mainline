define((require) => {	const prizeData = require("skbJet/componentManchester/standardIW/prizeData");	//Turn the scenario string into an array of prize values	function parse(scenarioString) {		let scenarioChars = scenarioString.split("");		let ret = [];		for(let i = 0; i < scenarioChars.length; i++) {			//For some reason the scenario string arrives here as either a comma-separated list of characters, or simply the characters with no commas.			//So we have to strip out any comma characters before the transform			if(scenarioChars[i] === ",") {				continue;			}			if(["1", "2"].includes(scenarioChars[i])) {				ret.push("IW" + prizeData.prizeTable["IW" + scenarioChars[i]]);			} else {				ret.push(prizeData.prizeTable[scenarioChars[i]]);			}		}		return ret;	}	//Turn an array of prize values back into a scenario string (used by gameState for checking reveal data integrity).	function stringify(scenario) {		let scenarioString = "";		let keys = Object.keys(prizeData.prizeTable);		for(let i = 0; i < scenario.length; i++) {			for(let j = 0; j < keys.length; j++) {				let prize = parseInt(String(scenario[i]).replace(/\D/g, ""));				if(prizeData.prizeTable[keys[j]] === prize) {					scenarioString += keys[j];					break;				}			}		}		return scenarioString;	}	return {		parse: parse,		stringify: stringify	};});