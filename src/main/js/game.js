(function mainEntry(){	"use strict";	/*XMLHttpRequest.prototype.open = (function(open){		return function(method, url, async, user, password) {			console.log("xhr call: "+ url +" isAsync: " + async);			//this.async = true;			//this.cache = false;			open.apply(this, [method, url, async, user, password]);		};	})(XMLHttpRequest.prototype.open);*/	// Game Namespace - edit here and in webapp/game_settings.json	var NAMESPACE = "JuicyLoot";		window.game = window.game || {};	window.game[NAMESPACE] = window.game[NAMESPACE] || {};	window.game[NAMESPACE].lib = {};	window.game[NAMESPACE].lib.Main = function Main(){};	window.game[NAMESPACE].lib.Main.prototype.init = function init(config){		if(config && config.urlGameFolder){			require.config({ baseUrl: config.urlGameFolder });		}		require.onResourceLoad = function (context, map) {			if (!window.loadedRequireArray) {				window.loadedRequireArray = [];			}			window.loadedRequireArray.push(map.name);		};		var _game = this;				require([			"skbJet/component/SKBeInstant/SKBeInstant",			"skbJet/componentManchester/standardIW/loadController",			"skbJet/componentManchester/spineLoader/SpineSubLoader",			"game/bitmapFontLoader/BitmapFontSubLoader",			"skbJet/componentManchester/standardIW/gameSize",			"game/gameEntry"		], function(SKBeInstant, loadController, SpineSubLoader, BitmapFontSubLoader){			loadController.registerSubLoader("spine", new SpineSubLoader({type: "spine"}));			loadController.registerSubLoader("bitmapFonts", new BitmapFontSubLoader({type: "bitmapFonts"}));			SKBeInstant.init(config, _game);		});	};	//if there is launcher.html in pathname then it should be SKB/RGS env	if(window.location.pathname.match(/launcher\.html$/)) {		require(["skbJet/component/gameMsgBus/PlatformMsgBusAdapter"], function(){			var gameInstance = new window.game[NAMESPACE].lib.Main();			gameInstance.init();		});	}})();